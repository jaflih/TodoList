(()=>{"use strict";var t={426:(t,e,n)=>{n.d(e,{Z:()=>i});var a=n(537),s=n.n(a),o=n(645),r=n.n(o)()(s());r.push([t.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto&display=swap);"]),r.push([t.id,"body {\n  background-color: #f6f6f6;\n  font-family: 'Roboto', sans-serif;\n  box-sizing: border-box;\n  margin: 0;\n  color: #645f5f7a;\n  caret-color: magenta;\n}\n\nsection {\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.todo {\n  box-shadow: 3px 2px 4px gray;\n}\n\n.todo > div,\n.task {\n  min-width: 400px;\n  max-width: 550px;\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid #dcdbdb;\n}\n\n.todo .header {\n  background-color: white;\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n}\n\n.todo .header h1 {\n  margin: 0;\n  font-size: 16px;\n  font-weight: 400;\n  color: #645f5f;\n}\n\n.todo .tasks,\n.todo .add_task {\n  background-color: white;\n}\n\n.todo .add_task,\n.task {\n  padding: 20px;\n}\n\n.completed {\n  text-decoration: line-through;\n}\n\n.task {\n  display: flex;\n  justify-content: space-between;\n  transition: background-color 0.5s ease;\n}\n\n.todo .tasks {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n}\n\ninput,\ninput:focus,\ntextarea:focus,\nselect:focus {\n  border: 0;\n  outline: 0;\n  font-size: 14px;\n  color: cadetblue;\n  line-height: 28px;\n  margin-right: 10px;\n  transition: background-color 0.5s ease;\n}\n\n.tasks input {\n  color: black;\n}\n\n.task:focus-within {\n  background-color: #ffff0052;\n}\n\n.dragStart,\n.dragStart input {\n  opacity: 0.9;\n  background-color: #fff;\n  border: 1px dotted black;\n  cursor: move;\n}\n\n.task:focus-within input {\n  background-color: #ffff0008;\n  transition: background-color 0s ease;\n}\n\ninput::placeholder {\n  font-style: italic;\n}\n\n.todo .footer {\n  text-align: center;\n  color: grey;\n  display: flex;\n  justify-content: center;\n  padding: 20px;\n}\n\n.task:hover {\n  cursor: move;\n}\n\n.dragSurvol {\n  border: 2px dotted black;\n}\n\ni {\n  cursor: pointer;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;EACE,yBAAyB;EACzB,iCAAiC;EACjC,sBAAsB;EACtB,SAAS;EACT,gBAAgB;EAChB,oBAAoB;AACtB;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,4BAA4B;AAC9B;;AAEA;;EAEE,gBAAgB;EAChB,gBAAgB;EAChB,aAAa;EACb,8BAA8B;EAC9B,gCAAgC;AAClC;;AAEA;EACE,uBAAuB;EACvB,aAAa;EACb,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,SAAS;EACT,eAAe;EACf,gBAAgB;EAChB,cAAc;AAChB;;AAEA;;EAEE,uBAAuB;AACzB;;AAEA;;EAEE,aAAa;AACf;;AAEA;EACE,6BAA6B;AAC/B;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,sCAAsC;AACxC;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;AACzB;;AAEA;;;;EAIE,SAAS;EACT,UAAU;EACV,eAAe;EACf,gBAAgB;EAChB,iBAAiB;EACjB,kBAAkB;EAClB,sCAAsC;AACxC;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,2BAA2B;AAC7B;;AAEA;;EAEE,YAAY;EACZ,sBAAsB;EACtB,wBAAwB;EACxB,YAAY;AACd;;AAEA;EACE,2BAA2B;EAC3B,oCAAoC;AACtC;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,aAAa;EACb,uBAAuB;EACvB,aAAa;AACf;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,eAAe;AACjB",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap');\n\nbody {\n  background-color: #f6f6f6;\n  font-family: 'Roboto', sans-serif;\n  box-sizing: border-box;\n  margin: 0;\n  color: #645f5f7a;\n  caret-color: magenta;\n}\n\nsection {\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.todo {\n  box-shadow: 3px 2px 4px gray;\n}\n\n.todo > div,\n.task {\n  min-width: 400px;\n  max-width: 550px;\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid #dcdbdb;\n}\n\n.todo .header {\n  background-color: white;\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n}\n\n.todo .header h1 {\n  margin: 0;\n  font-size: 16px;\n  font-weight: 400;\n  color: #645f5f;\n}\n\n.todo .tasks,\n.todo .add_task {\n  background-color: white;\n}\n\n.todo .add_task,\n.task {\n  padding: 20px;\n}\n\n.completed {\n  text-decoration: line-through;\n}\n\n.task {\n  display: flex;\n  justify-content: space-between;\n  transition: background-color 0.5s ease;\n}\n\n.todo .tasks {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n}\n\ninput,\ninput:focus,\ntextarea:focus,\nselect:focus {\n  border: 0;\n  outline: 0;\n  font-size: 14px;\n  color: cadetblue;\n  line-height: 28px;\n  margin-right: 10px;\n  transition: background-color 0.5s ease;\n}\n\n.tasks input {\n  color: black;\n}\n\n.task:focus-within {\n  background-color: #ffff0052;\n}\n\n.dragStart,\n.dragStart input {\n  opacity: 0.9;\n  background-color: #fff;\n  border: 1px dotted black;\n  cursor: move;\n}\n\n.task:focus-within input {\n  background-color: #ffff0008;\n  transition: background-color 0s ease;\n}\n\ninput::placeholder {\n  font-style: italic;\n}\n\n.todo .footer {\n  text-align: center;\n  color: grey;\n  display: flex;\n  justify-content: center;\n  padding: 20px;\n}\n\n.task:hover {\n  cursor: move;\n}\n\n.dragSurvol {\n  border: 2px dotted black;\n}\n\ni {\n  cursor: pointer;\n}\n"],sourceRoot:""}]);const i=r},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",a=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),a&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),a&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,a,s,o){"string"==typeof t&&(t=[[null,t,void 0]]);var r={};if(a)for(var i=0;i<this.length;i++){var d=this[i][0];null!=d&&(r[d]=!0)}for(var c=0;c<t.length;c++){var A=[].concat(t[c]);a&&r[A[0]]||(void 0!==o&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=o),n&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=n):A[2]=n),s&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=s):A[4]="".concat(s)),e.push(A))}},e}},537:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),o="/*# ".concat(s," */"),r=n.sources.map((function(t){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(t," */")}));return[e].concat(r).concat([o]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function n(t){for(var n=-1,a=0;a<e.length;a++)if(e[a].identifier===t){n=a;break}return n}function a(t,a){for(var o={},r=[],i=0;i<t.length;i++){var d=t[i],c=a.base?d[0]+a.base:d[0],A=o[c]||0,l="".concat(c," ").concat(A);o[c]=A+1;var p=n(l),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var f=s(u,a);a.byIndex=i,e.splice(i,0,{identifier:l,updater:f,references:1})}r.push(l)}return r}function s(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,s){var o=a(t=t||[],s=s||{});return function(t){t=t||[];for(var r=0;r<o.length;r++){var i=n(o[r]);e[i].references--}for(var d=a(t,s),c=0;c<o.length;c++){var A=n(o[c]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}o=d}}},569:t=>{var e={};t.exports=function(t,n){var a=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(n)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var a="";n.supports&&(a+="@supports (".concat(n.supports,") {")),n.media&&(a+="@media ".concat(n.media," {"));var s=void 0!==n.layer;s&&(a+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),a+=n.css,s&&(a+="}"),n.media&&(a+="}"),n.supports&&(a+="}");var o=n.sourceMap;o&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(a,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function n(a){var s=e[a];if(void 0!==s)return s.exports;var o=e[a]={id:a,exports:{}};return t[a](o,o.exports,n),o.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var a in e)n.o(e,a)&&!n.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:e[a]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t=n(379),e=n.n(t),a=n(795),s=n.n(a),o=n(569),r=n.n(o),i=n(565),d=n.n(i),c=n(216),A=n.n(c),l=n(589),p=n.n(l),u=n(426),f={};f.styleTagTransform=p(),f.setAttributes=d(),f.insert=r().bind(null,"head"),f.domAPI=s(),f.insertStyleElement=A(),e()(u.Z,f),u.Z&&u.Z.locals&&u.Z.locals;class E{constructor(t,e,n){this.index=t,this.description=e,this.completed=n}}class g{static save=t=>{localStorage.setItem("tasks",JSON.stringify(t))};static load=()=>null!=localStorage.getItem("tasks")?JSON.parse(localStorage.getItem("tasks")):[]}class h{static reset=t=>{t.innerHTML=""};static displayTask=(t,e)=>{const n=h.createHtml(t,"div","task");n.dataset.id=e.index,n.id="task_"+e.index,n.setAttribute("draggable","true"),n.setAttribute("data-effectallowed","move"),n.setAttribute("data-position",e.index-1),n.setAttribute("data-id",e.index);const a=h.createHtml(n,"div","task_input"),s=h.createHtml(a,"input");s.setAttribute("type","checkbox"),s.setAttribute("class",`task_${e.index}_checkbox checkbox_task`),s.id=`checkbox_task_${e.index}`,s.dataset.id=e.index;const o=h.createHtml(a,"input");o.setAttribute("type","text"),o.setAttribute("class",`task_${e.index} input_task`),o.dataset.id=e.index,o.value=e.description,o.id=`input_task_${e.index}`;const r=h.createHtml(n,"i","fas fa-ellipsis-v");r.setAttribute("class","fas fa-trash"),r.id=`task_${e.index}`,r.dataset.id=e.index};static createHtml=(t,e,n,a=null)=>{const s=document.createElement(e);return s.className=n,s.innerHTML=a,t.appendChild(s),s}}const k=(t,e)=>t.classList?t.classList.contains(e):!!t.className.match(new RegExp("(\\s|^)"+e+"(\\s|$)")),v=(t,e)=>{t.classList?t.classList.add(e):k(t,e)||(t.className+=" "+e)},x=(t,e)=>{if(t.classList)t.classList.remove(e);else if(k(t,e)){var n=new RegExp("(\\s|^)"+e+"(\\s|$)");t.className=t.className.replace(n," ")}},b=t=>document.querySelector(t),m=t=>document.querySelectorAll(t);let C;class B{static dragStartEvent=t=>{v(t.target,"dragStart"),t.dataTransfer.setData("tex/html",t.target.id)};static dragEndEvent=t=>{x(t.target,"dragStart")};static dragEnterEvent=t=>{k(t.target,"input_task")||k(t.target,"task_input")||v(t.target,"dragSurvol")};static dragLeaveEvent=t=>{t.target,x(t.target,"dragSurvol")};static dragOverEvent=t=>{k(t.target,"task")&&(C=t.target),t.preventDefault()};static dropEvent=t=>{if(!t.currentTarget.contains(t.relatedTarget))if("depot"==t.target.id)console.log("CAS E");else{let e=t.dataTransfer,n=b("#"+e.getData("tex/html")),a=document.querySelectorAll(".task");if(n.dataset.position-C.dataset.position==1){let t=n.dataset.position;C.before(n),n.dataset.position=C.dataset.position,C.dataset.position=t}else if(n.dataset.position-C.dataset.position==-1){C.after(n);let t=n.dataset.position;n.dataset.position=C.dataset.position,C.dataset.position=t}else if(n.dataset.position-C.dataset.position>1){let t=C.dataset.position,e=n.dataset.position;C.before(n);for(let s=0;s<a.length;s++){let o=a[s],r=o.dataset.position;if(t<=r&&r<=e)if(o.id==n.id)o.dataset.position=t;else{let t=Number.parseInt(r)+1;o.dataset.position=t}}}else if(n.dataset.position-C.dataset.position<1){let t=C.dataset.position,e=n.dataset.position;C.after(n);for(let s=0;s<a.length;s++){let o=a[s],r=o.dataset.position;if(e<=r&&r<=t)if(o.id==n.id)o.dataset.position=t;else{let t=Number.parseInt(r)-1;o.dataset.position=t}}}x(C,"dragSurvol")}}}const y=b("input"),w=new class{constructor(){this.tasks=g.load()}getTasks=()=>this.tasks.sort(((t,e)=>t.index-e.index));getTask=t=>this.tasks[t-1];addTask=(t,e=!1)=>{const n=new E(this.tasks.length+1,t,e);return this.tasks.push(n),g.save(this.tasks),n};deleteTask=t=>{const e=[],n=t-1;this.tasks.forEach(((t,a)=>{a<n?e.push(t):a>n&&(t.index=a,e.push(t))})),this.tasks=e,g.save(this.tasks)};updateTask=(t,e,n)=>(this.tasks[t-1].description=e,this.tasks[t-1].completed=n,g.save(this.tasks),this.tasks[t-1]);updateStatus=(t,e)=>(class{static updateStatus=(t,e)=>{t.completed=e}}.updateStatus(this.getTask(t),e),g.save(this.tasks),this.getTask(t));clearCompleted=()=>(this.tasks=this.tasks.filter((t=>!1===t.completed)),this.tasks.forEach(((t,e)=>{t.index=e+1})),g.save(this.tasks),this.tasks)},S=(t,e,n=!1)=>{("Enter"===t.key||n)&&(w.updateTask(e,b(`.task_${e}`).value,b(`.task_${e}_checkbox`).checked),b(".add_task input").focus())},_=t=>{w.updateStatus(t,b(`.task_${t}_checkbox`).checked),b(`.task[data-id='${t}'] .input_task`).classList.toggle("completed")},L=()=>{h.reset(b(".tasks")),w.getTasks().forEach((t=>h.displayTask(b(".tasks"),t))),m(".fa-trash").forEach((t=>t.addEventListener("click",(()=>{T(t.dataset.id)})))),m(".input_task").forEach((t=>t.addEventListener("keyup",(e=>{S(e,t.dataset.id)})))),m(".checkbox_task").forEach((t=>t.addEventListener("change",(()=>{_(t.dataset.id)}))))},T=t=>{w.deleteTask(t),L(),m(".input_task").forEach((t=>t.addEventListener("keyup",(e=>{S(e,t.dataset.id)})))),m(".input_task").forEach((t=>t.addEventListener("focusout",(e=>{S(e,t.dataset.id,!0)}))))},j=()=>{const t=w.addTask(y.value);h.displayTask(b(".tasks"),t),y.value="",b(`#task_${t.index}`).addEventListener("click",(()=>{T(t.index)})),b(`#input_task_${t.index}`).addEventListener("keyup",(e=>{S(e,t.index)})),b(`#input_task_${t.index}`).addEventListener("focusout",(e=>{S(e,t.index,!0)})),b(`#checkbox_task_${t.index}`).addEventListener("change",(()=>{_(t.index)})),b(`#input_task_${t.index}`).focus(),m(".task").forEach((t=>{t.addEventListener("dragstart",B.dragStartEvent),t.addEventListener("dragend",B.dragEndEvent)}))};b(".footer").addEventListener("click",(()=>{w.clearCompleted(),L()})),y.addEventListener("keyup",(({key:t})=>{"Enter"===t&&j()})),b(".fa-plus").addEventListener("click",(()=>j())),L(),m(".task").forEach((t=>{t.addEventListener("dragstart",B.dragStartEvent),t.addEventListener("dragend",B.dragEndEvent)}));let $=document.querySelector(".depot");$.addEventListener("dragenter",B.dragEnterEvent),$.addEventListener("dragleave",B.dragLeaveEvent),$.addEventListener("dragover",B.dragOverEvent),$.addEventListener("drop",B.dropEvent)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,